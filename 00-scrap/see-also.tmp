cljs.core/ns
    cljs.core/use
    cljs.core/require
    cljs.core/refer
    cljs.core/import
    cljs.core/ns-publics
    cljs.core/in-ns
    cljs.core/remove-ns
    cljs.core/ns-map
    cljs.core/*ns*

cljs.core/nil?
    cljs.core/identity

cljs.core/constantly
    cljs.core/repeatedly

cljs.core/comp
    cljs.core/partial
    cljs.core/juxt

cljs.core/complement
    cljs.core/not

cljs.core/partial
    cljs.core/comp
    cljs.core/juxt

cljs.core/juxt
    cljs.core/partial
    cljs.core/comp

cljs.core/memoize
    cljs.core/delay

cljs.core/every-pred
    cljs.core/some-fn

cljs.core/some-fn
    cljs.core/every-pred
    cljs.core/some

cljs.core/->
    cljs.core/->>

cljs.core/->>
    cljs.core/->

cljs.core/fn?
    cljs.core/ifn?

cljs.core/ifn?
    cljs.core/fn?

cljs.core/inc
    cljs.core/dec

cljs.core/int
    cljs.core/char
    cljs.core/long
    cljs.core/integer?
    cljs.core/ints
    cljs.core/int-array
    cljs.core/short

cljs.core/rand
    cljs.core/rand-int
    cljs.core/rand-nth

cljs.core/rand-int
    cljs.core/rand
    cljs.core/int

cljs.core/str
    cljs.core/pr
    cljs.core/prn

cljs.core/get
    cljs.core/map-indexed
    cljs.core/get-in
    cljs.core/find

cljs.core/subs
    clojure.string/replace
    clojure.string/split
    clojure.string/replace-first
    cljs.core/re-find
    cljs.core/re-seq
    cljs.core/re-matches

clojure.string/join
    cljs.core/split-at
    cljs.core/split-with
    cljs.core/interpose

clojure.string/split
    cljs.core/subs
    clojure.string/replace
    cljs.core/re-seq
    clojure.string/split-lines

clojure.string/split-lines
    clojure.string/split

clojure.string/replace
    cljs.core/subs
    clojure.string/split
    clojure.string/replace-first

clojure.string/replace-first
    clojure.string/replace
    cljs.core/re-pattern
    cljs.core/subs

cljs.core/re-find
    cljs.core/re-groups
    cljs.core/re-matcher
    cljs.core/re-pattern
    cljs.core/re-seq
    cljs.core/re-matches
    cljs.core/subs

cljs.core/re-matches
    cljs.core/re-find
    cljs.core/subs

cljs.core/re-pattern
    cljs.core/re-find
    clojure.string/replace
    clojure.string/replace-first

clojure.string/capitalize
    clojure.string/upper-case
    clojure.string/lower-case

clojure.string/lower-case
    clojure.string/upper-case
    clojure.string/capitalize

clojure.string/upper-case
    clojure.string/lower-case
    clojure.string/capitalize

clojure.string/trim
    clojure.string/triml
    clojure.string/trimr
    clojure.string/trim-newline

clojure.string/trim-newline
    clojure.string/trim
    clojure.string/triml
    clojure.string/trimr

clojure.string/triml
    clojure.string/trim
    clojure.string/trim-newline
    clojure.string/trimr

clojure.string/trimr
    clojure.string/trim
    clojure.string/triml

cljs.core/char
    cljs.core/char?
    cljs.core/int
    cljs.core/chars
    cljs.core/char-array

cljs.core/atom
    cljs.core/reset!
    cljs.core/swap!
    cljs.core/compare-and-set!
    cljs.core/add-watch
    cljs.core/remove-watch
    cljs.core/set-validator!

cljs.core/swap!
    cljs.core/atom
    cljs.core/reset!

cljs.core/remove-watch
    cljs.core/add-watch

cljs.core/try
    cljs.core/catch
    cljs.core/finally
    cljs.core/throw

cljs.core/catch
    cljs.core/try
    cljs.core/finally

cljs.core/finally
    cljs.core/try
    cljs.core/catch

cljs.core/throw
    cljs.core/try
    cljs.core/catch
    cljs.core/finally

cljs.core/empty
    cljs.core/not-empty

cljs.core/not-empty
    cljs.core/empty

cljs.core/into
    cljs.core/conj

cljs.core/conj
    cljs.core/cons
    cljs.core/into
    cljs.core/peek
    cljs.core/pop

cljs.core/distinct?
    cljs.core/distinct

cljs.core/empty?
    cljs.core/seq

cljs.core/every?
    cljs.core/some
    cljs.core/not-any?

cljs.core/not-every?
    cljs.core/every?
    cljs.core/not-any?
    cljs.core/some

cljs.core/some
    cljs.core/every?
    cljs.core/not-any?
    cljs.core/keep
    cljs.core/keep-indexed
    cljs.core/some-fn

cljs.core/not-any?
    cljs.core/some
    cljs.core/every?

cljs.core/sorted-set-by
    cljs.core/sorted-set
    cljs.core/sorted-map-by
    cljs.core/compare

cljs.core/disj
    cljs.core/dissoc
    cljs.core/disj!
    clojure.set/difference

cljs.core/sorted-map
    cljs.core/sorted-map-by
    cljs.core/subseq
    cljs.core/rsubseq
    cljs.core/sorted-set
    cljs.core/array-map
    cljs.core/hash-map

cljs.core/sorted-map-by
    cljs.core/sorted-map
    cljs.core/subseq
    cljs.core/rsubseq
    cljs.core/sorted-set-by

cljs.core/frequencies
    cljs.core/group-by
    cljs.core/distinct

cljs.core/realized?
    cljs.core/promise
    cljs.core/delay
    cljs.core/future

cljs.core/bit-shift-right
    cljs.core/bit-shift-left
    cljs.core/bit-xor
    cljs.core/bit-or
    cljs.core/bit-and
    cljs.core/bit-set
    cljs.core/bit-test
    cljs.core/bit-flip
    cljs.core/bit-and-not
    cljs.core/bit-clear

cljs.core/bit-shift-left
    cljs.core/bit-shift-left

cljs.core/bit-test
    cljs.core/bit-set
    cljs.core/bit-shift-left
    cljs.core/bit-xor
